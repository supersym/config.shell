#compdef docpad
#autoload

# docpad zsh completion

local -a _1st_arguments
_1st_arguments=(
    'run:does everyting from skeleton to generate, watch and serve' #  [options]
    'server:creates a server for your generated project' #  [options]
    'skeleton:will create a new project in your cwd based off an existing skeleton' #  [options]
    'render:render the file at <path> and output its results to stdout'
    'generate:(re)generates your project'
    'watch:watches your project for changes, and (re)generates whenever a change is made'
    'install:ensure everything is installed correctly'
    'clean:ensure everything is cleaned correctly (will remove your out directory)''
    'info:display the information about your docpad instance'
    'help:output the help also when docpad is run without subcommand'
#can we do custom extension commands???
    'suspend:Suspends the currently running vagrant environment'
    'up:Creates the vagrant environment'
    'version:Prints the Vagrant version information'
)

local -a _run_arguments
_run_arguments=(
    '-h, --help:output usage information'
    '-s, --skeleton <skeleton>:for new projects, instead of being asked for the skeleton, you can specify it here'
    '-p, --port <port>:a custom port to use for the server <port>''

    'add:NAME URI Add a box to the system'
    'help:COMMAND Describe subcommands or one specific subcommand'
    'list:Lists all installed boxes'
    'remove:NAME Remove a box from the system'
    'repackage:NAME Repackage an installed box into a `.box` file.'
)

__task_list ()
{
    local expl
    declare -a tasks

    tasks=(box destroy halt init package provision reload resume ssh ssh_config status suspend up version)

    _wanted tasks expl 'help' compadd $tasks
}

__run_list ()
{
    _wanted application expl 'command' compadd $(command ls -1 $HOME/.vagrant/boxes 2>/dev/null| sed -e 's/ /\\ /g')
}

__vm_list ()
{
    _wanted application expl 'command' compadd $(command grep Vagrantfile -oe '^[^#]*\.vm\.define *:\([a-zA-Z0-9]\+\)' 2>/dev/null | cut -d: -f2)
}

__vagrant-box ()
{
    local curcontext="$curcontext" state line
    typeset -A opt_args

    _arguments -C \
        ':command:->command' \
        '*::options:->options'

   case $state in
       (command)
           _describe -t commands "gem subcommand" _box_arguments
           return
       ;;

       (options)
           case $line[1] in
               (repackage|remove)
                   _arguments ':feature:__box_list'
               ;;
           esac
       ;;
    esac
}


#
# TODO: Should really help installed dp show
#

local expl
local -a boxes installed_boxes

local curcontext="$curcontext" state line
typeset -A opt_args

_arguments -C \
    ':command:->command' \
    '*::options:->options'

case $state in
  (command)
      _describe -t commands "gem subcommand" _1st_arguments
      return
  ;;

  (options)
    case $line[1] in
      (help)
         _arguments ':feature:__task_list'
      ;;

      (box)
          __vagrant-box
      ;;
      (up|provision|package|destroy|reload|ssh|halt|resume|status)
	_arguments ':feature:__vm_list'
    esac
  ;;
esac
